line = '92296930 |l 0.999 |p 17.1261997117|f 0:300 1:250 2:1 5:1 15:1 22:1 24:3 43:1 49:1 51:3 52:9 66:3 67:9 75:1 76:1 80:1 81:1 88:3 89:9 93:1 114:1 115:1 117:1 121:1 136:2 147:3 166:1 175:1 182:1 185:1 234:1 268:1 320:2 357:1 362:9 410:1 429:5 437:5 441:5 462:1 473:1 609:3 610:3 634:3 706:1 711:5 722:6 740:1 819:1 882:1 913:1 994:1 1020:1 1022:1 1051:1 1057:1 1067:1 1095:1 1097:1 1098:1 1099:1 1146:2 1161:5 1162:5 1179:5 1185:1 1189:1 1200:2 1287:3 1288:3 1289:9 1398:3 1399:3 1431:1 1560:1 1575:1 1728:1 1872:1 1878:2 1887:2 1986:5 2127:2 2134:2 2206:3 2207:3 2288:3 2327:5 2335:1 2744:1 2756:1 2796:1 2797:1 3689:2 3854:3 3855:5 3856:9 3857:3 3858:5 3859:9 3860:3 3861:5 3862:9 3868:5 3878:3 3879:5 4055:5 4114:1 4115:1 4122:1 4123:1 4124:6 4125:6 4734:1 4735:1 4736:6 5865:5 5866:3 6102:1 6149:1 6396:1 6397:1 7418:1 7420:1 7745:2 7746:2 7747:1 7863:1 7871:1 8103:1 8654:1 8655:1 8656:1 8661:1 9052:1 9055:1 9056:1 9065:3 10024:1 10107:1 10596:1 10742:1 10744:1 10748:1 10749:1 10926:1 11000:1 11364:1 11366:1 12059:2 12060:2 12353:1 12357:1 12602:1 12604:2 12631:2 13476:1 13571:1 13905:1 13906:2 14316:6 14317:1 14318:2 14869:1 15842:2 15845:2 16586:6 17071:3 17372:2 17375:2 17376:2 17377:1 17465:1 18147:9 18148:5 18332:5 18335:1 18337:3 18679:3 19231:1 19236:1 20228:1 20302:1 20303:1 20997:2 22848:1 23554:1 23555:1 23556:2 23574:2 23576:2 23877:1 24249:1 24925:2 25145:3 25146:3 25147:3 25150:1 25269:2 26227:1 29376:2 29589:1 29591:1 30082:1 30142:1 30629:1 33386:2 33803:1 33872:2 34697:2 36984:1 40580:1 41207:1 43649:2 53250:2 62048:1 62049:1'

# First, split the line on pipe characters to identify parts
parts = line.split('|')
print(f'Line has {len(parts)} parts separated by pipes.')

# The feature part typically starts with 'f ' 
feature_part = None
for part in parts:
    if part.strip().startswith('f '):
        feature_part = part.strip()
        break

if feature_part:
    # Remove the 'f ' prefix
    feature_part = feature_part[2:]
    
    # Split on whitespace to get individual feature:value pairs
    feature_elements = feature_part.split()
    
    # Count elements containing colons
    colon_count = sum(1 for elem in feature_elements if ':' in elem)
    
    print(f'Number of feature elements (containing colons): {colon_count}')
    
    # Print out all the feature IDs
    feature_ids = [elem.split(':')[0] for elem in feature_elements if ':' in elem]
    print(f'Feature IDs: {feature_ids}')
else:
    print('No feature part found in the line.')